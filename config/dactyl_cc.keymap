#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// Modifiers

&kscan0 {
    debounce-press-ms = <30>;
    debounce-release-ms = <30>;
};

&lt { flavor = "hold-preferred"; };

/ {
    behaviors {
        bsdel: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        excl_apo: excl_apo {
            compatible = "zmk,behavior-mod-morph";
            label = "EXCL_APO";
            bindings = <&kp EXCLAMATION>, <&apo>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        apo_quot: apo_quot {
            compatible = "zmk,behavior-mod-morph";
            label = "APO_QUOT";
            bindings = <&apo>, <&qout>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        hwu: hwu {
            compatible = "zmk,behavior-hold-tap";
            label = "HWU";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-while-undecided;
            tapping-term-ms = <200>;
        };

        shiftmod: shiftmod {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFTMOD";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT>, <&kp LSHIFT>, <&sl 5>;
        };

        bracket_y: bracket_y {
            compatible = "zmk,behavior-mod-morph";
            label = "BRACKET_Y";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp Y>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        tp: tap_preferred_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "tap preferred layer";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
        };

        ht_lay: ht_lay {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_LAY";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        tap_unless: tap_unless {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_UNLESS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
        };
    };

    macros {
        /**
              * Temporarily switches to a layer (`&mo`) while a modifier is held.
              * Analogous to QMK's `LM()`, using a parameterized macro.
              *
              * Params:
              *  1. Layer to switch to
              *  2. Modifier to press while layer is active
              *
              * Example:
              *  `&lm NUM_LAYER LSHIFT`
              */

        infinity: infinity {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_2 &kp KP_NUMBER_3 &kp KP_NUMBER_6>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "INFINITY";
        };

        sqrt: sqrt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_2 &kp KP_NUMBER_5 &kp KP_NUMBER_1>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "SQRT";
        };

        apo: apo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp APOS &kp SPACE>;
            label = "APO";
        };

        qout: qout {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(APOS) &kp SPACE>;
            label = "QOUT";
        };

        modl: modl {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER &macro_param_2to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER &macro_param_2to1 &kp MACRO_PLACEHOLDER>;

            label = "MODL";
        };

        tilde: tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TILDE &kp SPACE>;
            label = "TILDE";
        };
    };

    combos {
        compatible = "zmk,combos";

        ae {
            bindings = <&kp RA(Q)>;
            key-positions = <13 3>;
            timeout-ms = <35>;
            layers = <0>;
        };

        oe {
            bindings = <&kp RA(P)>;
            key-positions = <9 3>;
            timeout-ms = <35>;
            layers = <0>;
        };

        ue {
            bindings = <&kp RA(Y)>;
            key-positions = <7 3>;
            timeout-ms = <35>;
            layers = <0>;
        };

        sz {
            bindings = <&kp RA(S)>;
            key-positions = <14 3>;
            timeout-ms = <35>;
            layers = <0>;
        };

        magic_r {
            bindings = <&sl 5>;
            key-positions = <48 49>;
            timeout-ms = <35>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Default";
            bindings = <
&excl_apo             &kp Q  &kp W       &kp E                  &kp R                        &kp T                                              &kp Y        &kp U                    &kp I             &kp O              &kp P          &trans
&kp TAB               &kp A  &kp S       &kp D                  &kp F                        &kp G                                              &kp H        &kp J                    &kp K             &kp L              &kp SEMICOLON  &caps_word
&hwu LCTRL BACKSLASH  &kp Z  &kp X       &kp C                  &kp V                        &kp B                                              &kp N        &kp M                    &kp COMMA         &kp DOT            &kp EQUAL      &apo_quot
                             &bracket_y  &kp RIGHT_PARENTHESIS                                                                                                                        &kp LEFT_BRACKET  &kp RIGHT_BRACKET
                                                                &tap_unless LCTRL BACKSPACE  &lt 4 ENTER   &hwu LSHFT SPACE        &ht_lay 3 3  &tp 4 SPACE  &hwu RIGHT_SHIFT ESCAPE
                                                                                             &lt 3 ESCAPE  &hwu LEFT_ALT LEFT_GUI  &kp RWIN     &kp RCTRL
            >;
        };

        epic_gamer_layer {
            bindings = <
&kp N1  &kp TAB           &kp Q         &kp W  &kp E   &kp R                      &trans  &trans  &trans  &trans  &trans  &trans
&kp N2  &kp LEFT_SHIFT    &kp A         &kp S  &kp D   &kp F                      &trans  &trans  &trans  &trans  &trans  &trans
&kp N3  &kp LEFT_CONTROL  &kp Z         &kp X  &kp C   &kp V                      &trans  &trans  &trans  &trans  &trans  &trans
                          &kp NUMBER_4  &kp M                                                     &trans  &trans
                                               &trans  &kp SPACE  &trans  &trans  &trans  &trans
                                                       &trans     &trans  &trans  &to 0
            >;
        };

        colemak {
            bindings = <
&kp EQUAL  &kp Q  &kp W         &kp F         &kp P   &kp B                   &kp J   &kp L   &kp U      &kp Y     &kp SEMI  &kp SQT
&kp LCTRL  &kp A  &kp R         &kp S         &kp T   &kp G                   &kp M   &kp N   &kp E      &kp I     &kp O     &kp RCTRL
&kp LALT   &kp Z  &kp X         &kp C         &kp D   &kp V                   &kp K   &kp H   &kp COMMA  &kp DOT   &kp FSLH  &kp LALT
                  &kp LS(LPAR)  &kp LS(RPAR)                                                  &kp LBKT   &kp RBKT
                                              &trans  &trans  &trans  &trans  &trans  &trans
                                                      &trans  &trans  &trans  &trans
            >;
        };

        symbol_layer {
            bindings = <
&tilde    &kp AT_SIGN   &kp HASH       &kp DOLLAR    &kp PERCENT    &kp CARET                   &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_7  &trans
&kp HOME  &kp LEFT      &kp DOWN       &kp UP        &kp RIGHT      &kp END                     &kp F   &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
&trans    &kp LC(LEFT)  &kp AMPERSAND  &kp ASTERISK  &kp LC(RIGHT)  &kp RA(N5)                  &trans  &kp N8        &kp COMMA     &kp PERIOD    &kp NUMBER_9  &trans
                        &kp PAGE_DOWN  &kp PAGE_UP                                                                    &kp T         &kp UNDER
                                                     &trans         &trans      &trans  &trans  &trans  &trans
                                                                    &trans      &trans  &trans  &trans
            >;
        };

        function_layer {
            bindings = <
&kp N1  &kp N2  &kp N3        &kp N4      &kp N5   &kp NUMBER_6                  &kp N7        &kp N8     &kp N9        &kp N0     &trans     &kp PSCRN
&kp F1  &kp F2  &kp F3        &kp F4      &kp F5   &kp F6                        &trans        &kp SLASH  &kp QUESTION  &kp UNDER  &kp MINUS  &trans
&kp F7  &kp F8  &kp F9        &kp F10     &kp F11  &kp F12                       &trans        &qout      &trans        &trans     &trans     &sl 5
                &kp NUMBER_0  &kp DELETE                                                                  &trans        &trans
                                          &trans   &trans        &trans  &trans  &trans        &trans
                                                   &trans        &trans  &trans  &kp LEFT_GUI
            >;
        };

        settings {
            bindings = <
&soft_off  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &trans                      &soft_off  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &trans
&trans     &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &trans                      &trans     &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &trans
&to 0      &to 1          &to 2          &trans         &out OUT_TOG   &bt BT_CLR                  &trans     &to 1          &trans         &trans         &out OUT_TOG   &bt BT_CLR
                          &sys_reset     &bootloader                                                                         &sys_reset     &bootloader
                                                        &trans         &trans      &trans  &trans  &trans     &trans
                                                                       &trans      &trans  &trans  &trans
            >;
        };
    };
};
